{"version":3,"file":"static/js/963.2fb64da9.chunk.js","mappings":"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","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/Option/OptionPostEdit.jsx","../node_modules/@ant-design/icons-svg/es/asn/MinusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/MinusCircleOutlined.js"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('lptoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        await axios.delete(url, {data:ids});\n    },\n};\nexport default apiService;","import React, {useEffect, useMemo, useState} from 'react';\nimport {Button, Col, Form, Input, InputNumber, message, Row, Select, Upload} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\n\n// import ImgCrop from \"antd-img-crop\";\nimport {MinusCircleOutlined} from \"@ant-design/icons\";\n\nconst initialValueForm = {\n    model: \"\",\n    position: \"\",\n    exterior: \"\",\n    interior: \"\",\n    name: \"\",\n    price: null,\n    bonus: \"\",\n    includeComment: \"\",\n    mainMediaId: \"\",\n    bannerMediaId: \"\",\n    includes: []\n};\n\n\nconst OptionPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId} = useSelector(state => state.editData)\n    const dispatch = useDispatch()\n\n\n    const [fileListPropsMain, setFileListPropsMain] = useState([]);\n    const [fileListPropsBanner, setFileListPropsBanner] = useState([]);\n    const [fileListPropsIncludes, setFileListPropsInludes] = useState([]);\n    const [modelPosition, setModelPosition] = useState(\"\");\n    const [modelExterior, setModelExterior] = useState(\"\");\n    const [modelInterior, setModelInterior] = useState(\"\");\n    const [isUpload, setIsUpload] = useState('');\n    const [mainIndex, setMainIndex] = useState(0);\n// query-model\n    const {data: modelData, refetch: modelFetch} = useQuery('get-model', () => apiService.getData('/product'), {\n        enabled: false,\n    },);\n    // query-position-get\n    const {\n        data: positionData,\n        refetch: positionFetch\n    } = useQuery('get-position', () => apiService.getData(`/position?model=${modelPosition}`), {\n        enabled: false,\n    },);\n    // query-exterior-get\n    const {\n        data: exteriorData,\n        refetch: exteriorFetch\n    } = useQuery('get-exterior', () => apiService.getData(`/exterior?model=${modelPosition}&position=${modelExterior}`), {\n        enabled: false,\n    },);\n    // query-interior-get\n    const {\n        data: interiorData,\n        refetch: interiorFetch\n    } = useQuery('get-interior', () => apiService.getData(`/interior?model=${modelPosition}&position=${modelExterior}&exterior=${modelInterior}`), {\n        enabled: false,\n    },);\n\n    // query-image\n    const {\n        mutate: imagesUploadMutate, data: imagesUpload, isLoading: imagesUploadLoading, isSuccess: imagesUploadSuccess,\n    } = useMutation(({url, formData}) => apiService.postData(url, formData), {\n\n        onError: (error) => message.error(error.message, 'Rasmning JPG,JPEG,PNG formatlariga ruxsat etilgan')\n    });\n\n\n    // query-exterior\n    const {\n        mutate: postExteriorMutate, data: postExterior, isLoading: postExteriorLoading, isSuccess: postExteriorSuccess,\n\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n            message.success('Success')\n        }, onError: (error) => {\n            message.error(error.message)\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editExteriorLoading,\n        data: editExteriorData,\n        refetch: editExteriorRefetch,\n        isSuccess: editExteriorSuccess,\n\n    } = useQuery([\"edit-option\", editId], () => apiService.getDataByID(\"/option\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putExterior, isLoading: putExteriorLoading, data: putData, isSuccess: putExteriorSuccess\n    } = useMutation(({\n                         url, data, id\n                     }) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n\n            message.success('Success')\n        }, onError: (error) => {\n\n            message.error(error)\n        }\n    });\n\n    // delete image\n\n    const {mutate: imagesDeleteMutate} = useMutation(({url, ids}) => apiService.deleteImages(url, ids), {\n        onSuccess: () => message.success('Success'), onError: (error) => message.error(error.message)\n    });\n\n    //                                              =====useEffect====\n    // get postion\n    useEffect(() => {\n        if (modelPosition) {\n            positionFetch()\n        }\n        const formModel = form.getFieldsValue()\n        if (editExteriorData?.model !== formModel?.model) {\n            form.setFieldsValue({position: \"\"})\n            form.setFieldsValue({exterior: \"\"})\n            form.setFieldsValue({interior: \"\"})\n        }\n\n    }, [modelPosition])\n\n    // get exterior\n    useEffect(() => {\n        if (modelExterior) {\n            exteriorFetch()\n        }\n        const formModel = form.getFieldsValue()\n        if (editExteriorData?.position !== formModel?.position) {\n            form.setFieldsValue({exterior: \"\"})\n            form.setFieldsValue({interior: \"\"})\n        }\n    }, [modelExterior])\n// get interior\n    useEffect(() => {\n        if (modelInterior) {\n            interiorFetch()\n        }\n        const formModel = form.getFieldsValue()\n        if (editExteriorData?.exterior !== formModel?.exterior) {\n            form.setFieldsValue({interior: \"\"})\n        }\n    }, [modelInterior])\n\n    // exterior success\n    useEffect(() => {\n        if (putExteriorSuccess) {\n            dispatch({type: EDIT_DATA, payload: \"\"})\n        }\n        if (postExteriorSuccess || putExteriorSuccess) {\n            navigate('/option')\n        }\n    }, [postExterior, putData])\n\n    // if edit postion\n    useEffect(() => {\n        if (editId !== \"\") {\n            editExteriorRefetch();\n        }\n    }, [editId]);\n\n    // if no edit postion\n    useEffect(() => {\n        if (editId === \"\") {\n            form.setFieldsValue(initialValueForm)\n        }\n        modelFetch();\n    }, []);\n\n\n    //edit postion\n    useEffect(() => {\n        const initialIncludes = [];\n        const initialFileListPropsIncludes = [];\n\n        if (editExteriorData !== undefined) {\n            for (let i = 0; i < editExteriorData.includes.length; i++) {\n                let editDefaultImages = []\n\n                if (editExteriorData.includes[i]?.image?.name !== \"null\") {\n                    editDefaultImages = [{\n                        uid: editExteriorData.includes[i]?.image?._id,\n                        name: editExteriorData.includes[i]?.image?.name,\n                        status: \"done\",\n                        url: `${process.env.REACT_APP_API_URL}/${editExteriorData.includes[i]?.image?.path}`\n                    }];\n                }\n                const joinTags = editExteriorData.includes[i].tags.join(',')\n                const item = {\n                    title: editExteriorData.includes[i].title,\n                    comment: editExteriorData.includes[i].comment,\n                    tags: joinTags,\n                    mediaId: editDefaultImages\n                };\n                initialIncludes.push(item);\n                initialFileListPropsIncludes.push(editDefaultImages)\n            }\n        }\n\n        const imageInitialBanner = [{\n            uid: editExteriorData?.bannerImage?._id,\n            name: editExteriorData?.bannerImage?.name,\n            status: 'done',\n            url: `${process.env.REACT_APP_API_URL}/${editExteriorData?.bannerImage?.path}`,\n        },];\n        const imageInitialMain = [{\n            uid: editExteriorData?.mainImage?._id,\n            name: editExteriorData?.mainImage?.name,\n            status: 'done',\n            url: `${process.env.REACT_APP_API_URL}/${editExteriorData?.mainImage?.path}`,\n        },];\n\n        if (editExteriorSuccess) {\n\n            const edit = {\n                model: editExteriorData.model,\n                position: editExteriorData.position,\n                exterior: editExteriorData.exterior,\n                interior: editExteriorData.interior,\n                name: editExteriorData.name,\n                bonus: \"\",\n                includeComment: editExteriorData.includeComment,\n                price: editExteriorData.price === 0 ? null : editExteriorData.price,\n                mainMediaId: imageInitialMain,\n                bannerMediaId: imageInitialBanner,\n                includes: initialIncludes\n            }\n            setModelPosition(editExteriorData.model)\n            setModelExterior(editExteriorData.position)\n            setModelInterior(editExteriorData.exterior)\n\n            setFileListPropsBanner(imageInitialBanner);\n            setFileListPropsMain(imageInitialMain);\n            setFileListPropsInludes(initialFileListPropsIncludes)\n            form.setFieldsValue(edit)\n        }\n\n    }, [editExteriorData])\n    const onFinish = (values) => {\n\n\n        const includes = []\n\n        for (let i = 0; i < values.includes.length; i++) {\n            let isImage = \"\"\n            let splitTags;\n            if (fileListPropsIncludes.length > 0) {\n                if (fileListPropsIncludes[i] === null || fileListPropsIncludes[i]?.length < 1) {\n                    isImage = \"\"\n                } else {\n                    isImage = fileListPropsIncludes[i][0]?.uid\n                }\n            }\n            if (values.includes[i].tags) {\n                splitTags = values.includes[i].tags.split(',')\n            }\n            const item = {\n                title: values.includes[i].title || \"\",\n                comment: values.includes[i].comment || \"\",\n                tags: splitTags || [],\n                mediaId: isImage\n            };\n            includes.push(item);\n        }\n\n\n        const data = {\n            model: values.model,\n            position: values.position,\n            exterior: values.exterior,\n            interior: values.interior,\n            name: values.name,\n            bonus: \"\",\n            includeComment: values.includeComment,\n            price: (values.price === null || values.price === \"\") ? 0 : values.price,\n            bannerMediaId: fileListPropsBanner[0]?.uid,\n            mainMediaId: fileListPropsMain[0]?.uid,\n            includes\n        };\n        if (editExteriorSuccess) {\n            putExterior({url: \"/option\", data, id: editId});\n        } else {\n            postExteriorMutate({url: \"/option\", data});\n        }\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem('myFormValues', JSON.stringify(form.getFieldsValue()),);\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n    // selection\n    const options = useMemo(() => {\n        return modelData?.map((option) => {\n            return {\n                value: option?.model, label: option?.model,\n            };\n        });\n    }, [modelData]);\n\n    const optionsPosition = useMemo(() => {\n        return positionData?.map((option) => {\n            return {\n                value: option?.name, label: option?.name,\n            };\n        });\n    }, [positionData]);\n    const optionsExterior = useMemo(() => {\n        return exteriorData?.map((option) => {\n            return {\n                value: option?.name, label: option?.name,\n            };\n        });\n    }, [exteriorData]);\n\n    const optionsInterior = useMemo(() => {\n        return interiorData?.map((option) => {\n            return {\n                value: option?.name, label: option?.name,\n            };\n        });\n    }, [interiorData]);\n\n    const changeModel = (value) => {\n        setModelPosition(value)\n    }\n    const changePosition = (value) => {\n        setModelExterior(value)\n    }\n\n    const changeExterior = (value) => {\n        setModelInterior(value)\n    }\n\n    // image\n\n    useEffect(() => {\n        // MAIN\n        if (imagesUploadSuccess && isUpload === \"main\") {\n            const uploadImg = [{\n                uid: imagesUpload[0]?._id,\n                name: imagesUpload[0]?.name,\n                status: \"done\",\n                url: `${process.env.REACT_APP_API_URL}/${imagesUpload[0]?.path}`\n            }]\n\n            setFileListPropsMain(uploadImg);\n            setIsUpload('')\n        }\n\n        // BANNER\n        if (imagesUploadSuccess && isUpload === 'banner') {\n            const uploadImg = [{\n                uid: imagesUpload[0]?._id,\n                name: imagesUpload[0]?.name,\n                status: \"done\",\n                url: `${process.env.REACT_APP_API_URL}/${imagesUpload[0]?.path}`\n            }]\n            setFileListPropsBanner(uploadImg);\n            setIsUpload('')\n        }\n        // INCLUDES\n        const uploadFilesStateIncludes = [...fileListPropsIncludes];\n        if (imagesUploadSuccess && isUpload === 'includes') {\n            const uploadImg = [{\n                uid: imagesUpload[0]?._id,\n                name: imagesUpload[0]?.name,\n                status: \"done\",\n                url: `${process.env.REACT_APP_API_URL}/${imagesUpload[0]?.path}`\n            }]\n            uploadFilesStateIncludes[mainIndex] = uploadImg;\n            setFileListPropsInludes(uploadFilesStateIncludes);\n            const getValue = form.getFieldsValue();\n            const itemsValue = getValue?.includes;\n            if (!itemsValue[mainIndex]){\n                itemsValue[mainIndex]={\n                    mediaId:\"\",\n                    tags:\"\",\n                    title:\"\",\n                    comment:\"\"\n                }\n            }\n            itemsValue[mainIndex].mediaId = uploadImg;\n            form.setFieldsValue({items: itemsValue});\n            setIsUpload('')\n        }\n\n    }, [imagesUpload]);\n    const onChangeBanner = ({fileList: newFileList}) => {\n        form.setFieldsValue({bannerMediaId: newFileList});\n        if (fileListPropsBanner.length !== 0 || newFileList.length === 0) {\n            let id=[fileListPropsBanner[0]?.uid]\n\n            const ids={\n                ids:id\n            }\n            imagesDeleteMutate({url: \"/medias\", ids});\n            setFileListPropsBanner([])\n        }\n        const formData = new FormData();\n\n        if (newFileList.length !== 0) {\n            formData.append(\"media\", newFileList[0].originFileObj);\n            imagesUploadMutate({url: \"/medias\", formData});\n            setIsUpload('banner')\n        }\n\n    };\n    const onChangeMainImage = ({fileList: newFileList}) => {\n\n        form.setFieldsValue({mainMediaId: newFileList});\n        if (fileListPropsMain.length !== 0 || newFileList.length === 0) {\n            const id = [fileListPropsMain[0]?.uid];\n            const ids={\n                ids:id\n            }\n            imagesDeleteMutate({url: \"/medias\", ids});\n            setFileListPropsMain([])\n        }\n        const formData = new FormData();\n\n        if (newFileList.length !== 0) {\n            formData.append(\"media\", newFileList[0].originFileObj);\n            imagesUploadMutate({url: \"/medias\", formData});\n            setIsUpload('main')\n        }\n    };\n\n    const onChangeIncludesImage = (index, {fileList: newFileList}) => {\n        setMainIndex(index);\n\n\n        if (fileListPropsIncludes[index] || newFileList.length === 0) {\n            const id = [fileListPropsIncludes[index][0].uid];\n            const ids={\n                ids:id\n            }\n            imagesDeleteMutate({url: \"/medias\", ids});\n            fileListPropsIncludes[index] = null;\n            setFileListPropsInludes(fileListPropsIncludes);\n\n        }\n        const formData = new FormData();\n        if (newFileList.length !== 0) {\n            formData.append(\"media\", newFileList[0].originFileObj);\n            imagesUploadMutate({url: \"/medias\", formData});\n            setIsUpload('includes')\n\n        }\n    };\n\n\n    // handleRemoveIncludes\n    const handleRemoveIncludes = (name, remove, index, editorFileList) => {\n        console.log(index)\n            console.log(editorFileList)\n            console.log(fileListPropsIncludes)\n        if (editorFileList === fileListPropsIncludes[index] && fileListPropsIncludes.length > 0) {\n            const id = [fileListPropsIncludes[index][0]?.uid];\n            fileListPropsIncludes.splice(index, 1);\n            const ids={\n                ids:id\n            }\n            imagesDeleteMutate({url: \"/medias\", ids});\n        }\n        remove(name);\n    };\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n\n\n    const addFormList=(add)=>{\n        let itemsValue=[];\n        add()\n        const getValue = form.getFieldsValue();\n        if (!getValue?.includes[0]){\n        itemsValue.push({\n            mediaId:\"\",\n            title:\"\",\n            comment:\"\",\n            tags:\"\"\n        })\n        }\n        form.setFieldsValue({items: itemsValue});\n    }\n\n    return (<div>\n        {(postExteriorLoading || editExteriorLoading || putExteriorLoading || imagesUploadLoading) ? <AppLoader/> :\n            <Form\n                form={form}\n                name=\"basic\"\n                labelCol={{\n                    span: 24\n                }}\n                wrapperCol={{\n                    span: 24\n                }}\n                style={{\n                    maxWidth: \"100%\"\n                }}\n                initialValues={initialValueForm}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n            >\n                <Row gutter={20}>\n                    <Col span={12}>\n                        <Form.Item\n                            label={'Выберите модель'}\n                            name={'model'}\n                            rules={[{required: true, message: 'Пожалуйста, выберите свою модель'},]}>\n                            <Select\n                                style={{\n                                    width: '100%',\n                                }}\n                                onChange={changeModel}\n                                placeholder='Выберите одну модель'\n                                optionLabelProp='label'\n                                options={options}\n                            />\n                        </Form.Item>\n\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            label={'Выберите позиция'}\n                            name={'position'}\n                            rules={[{required: true, message: 'Пожалуйста, выберите свою позиция'},]}>\n                            <Select\n                                style={{\n                                    width: '100%',\n                                }}\n                                onChange={changePosition}\n                                placeholder='Выберите одну позиция'\n                                optionLabelProp='label'\n                                options={optionsPosition}\n                            />\n                        </Form.Item>\n\n                    </Col>\n\n\n                </Row>\n\n                <Row gutter={20}>\n                    <Col span={12}>\n                        <Form.Item\n                            label={'Выберите Экстерьер'}\n                            name={'exterior'}\n                            rules={[{required: true, message: 'Пожалуйста, выберите свой экстерьер'},]}>\n                            <Select\n                                style={{\n                                    width: '100%',\n                                }}\n                                placeholder='Выберите одну экстерьер'\n                                optionLabelProp='label'\n                                onChange={changeExterior}\n                                options={optionsExterior}\n                            />\n                        </Form.Item>\n\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            label={'Выберите Интерьер'}\n                            name={'interior'}\n                            rules={[{required: true, message: 'Пожалуйста, выберите свой Интерьер'},]}>\n                            <Select\n                                style={{\n                                    width: '100%',\n                                }}\n                                placeholder='Выберите одну Интерьер'\n                                optionLabelProp='label'\n                                options={optionsInterior}\n                            />\n                        </Form.Item>\n\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"Выберите Вариант\"\n                            name=\"name\"\n                            rules={[{\n                                required: true, message: \"Пожалуйста, введите Вариант\"\n                            }]}\n                        >\n                            <Input/>\n                        </Form.Item>\n\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"Цена, (не требуется)\"\n                            name=\"price\"\n                        >\n                            <InputNumber style={{width: '100%'}}/>\n                        </Form.Item>\n\n                    </Col>\n                </Row>\n\n                <Row gutter={20}>\n                    {/*<Col span={12}>*/}\n                    {/*    <Form.Item*/}\n                    {/*        label=\"Бонус, (не требуется)\"*/}\n                    {/*        name=\"bonus\"*/}\n                    {/*    >*/}\n                    {/*        <Input/>*/}\n                    {/*    </Form.Item>*/}\n\n                    {/*</Col>*/}\n                    <Col span={24}>\n                        <Form.Item\n                            label=\"Включить комментарий, (не требуется)\"\n                            name=\"includeComment\"\n                        >\n                            <Input/>\n                        </Form.Item>\n\n                    </Col>\n                </Row>\n\n                <Row gutter={20}>\n                    <Col span={12}>\n                        <Form.Item\n                            label='Изображение баннер'\n                            name={'bannerMediaId'}\n                            rules={[{required: true, message: 'Требуется загрузка изображения баннер'}]}>\n                            {/*<ImgCrop>*/}\n                                <Upload\n                                    maxCount={1}\n                                    fileList={fileListPropsBanner}\n                                    listType='picture-card'\n                                    onChange={onChangeBanner}\n                                    onPreview={onPreview}\n                                    beforeUpload={() => false}\n                                >\n                                    {fileListPropsBanner.length > 0 ? \"\" : \"Upload\"}\n                                </Upload>\n                            {/*</ImgCrop>*/}\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            label='Изображение основной'\n                            name={'mainMediaId'}\n                            rules={[{required: true, message: 'Требуется загрузка изображения основной'}]}>\n                            {/*<ImgCrop>*/}\n                                <Upload\n                                    maxCount={1}\n                                    fileList={fileListPropsMain}\n                                    listType='picture-card'\n                                    onChange={onChangeMainImage}\n                                    onPreview={onPreview}\n                                    beforeUpload={() => false}\n                                >\n                                    {fileListPropsMain.length > 0 ? \"\" : \"Upload\"}\n                                </Upload>\n                            {/*</ImgCrop>*/}\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Form.List name=\"includes\">\n                    {(fields, {add, remove}) => (\n                        <>\n                            {fields.map((field, index) => {\n                                const editorFileList = fileListPropsIncludes[index] || [];\n                                return (\n                                    <div key={field.fieldKey} style={{marginBottom: 20}}>\n                                        <Row gutter={20}>\n                                            <Col span={12}>\n                                                <Form.Item\n                                                    label='Заголовок, (не требуется)'\n                                                    name={[field.name, 'title']}\n                                                >\n                                                    <Input/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={12}>\n                                                <Form.Item\n                                                    label='Комментарий, (не требуется)'\n                                                    name={[field.name, 'comment']}\n                                                >\n                                                    <Input/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={24}>\n                                                <Form.Item\n                                                    label='Каковы преимущества этой включает, (не требуется)'\n                                                    name={[field.name, 'tags']}\n\n                                                >\n                                                    <Input placeholder='option1, option2, option3'/>\n                                                </Form.Item>\n                                            </Col>\n                                        </Row>\n\n\n                                        <Form.Item\n                                            label={`Фото, (не требуется) ${index + 1}`}\n                                            name={[field.name, \"mediaId\"]}\n\n                                        >\n                                            {/*<ImgCrop rotate>*/}\n                                                <Upload\n                                                    maxCount={1}\n                                                    listType=\"picture-card\"\n                                                    fileList={editorFileList}\n                                                    onChange={(newFileList) => onChangeIncludesImage(index, newFileList)}\n                                                    onPreview={onPreview}\n                                                    beforeUpload={() => false}\n                                                >\n                                                    {editorFileList.length < 1 && \"+ Upload\"}\n                                                </Upload>\n                                            {/*</ImgCrop>*/}\n                                        </Form.Item>\n\n                                        <MinusCircleOutlined\n                                            onClick={() => handleRemoveIncludes(field.name, remove, index , editorFileList)}/>\n                                    </div>\n\n                                );\n                            })}\n                            <Form.Item>\n                                <Button type=\"primary\" onClick={() => addFormList(add)} block style={{backgroundColor: '#28a745'}}>\n                                    Добавьте предмет\n                                </Button>\n                            </Form.Item>\n\n                        </>\n                    )}\n                </Form.List>\n\n\n                <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"20px\"}}>\n                    {editExteriorSuccess ? 'Edit' : 'Add'}\n                </Button>\n            </Form>}\n    </div>);\n};\n\nexport default OptionPostEdit;","// This icon file is generated automatically.\nvar MinusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"minus-circle\", \"theme\": \"outlined\" };\nexport default MinusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar MinusCircleOutlined = function MinusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MinusCircleOutlinedSvg\n  }));\n};\nMinusCircleOutlined.displayName = 'MinusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(MinusCircleOutlined);"],"names":["axios","baseURL","concat","process","request","use","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","data","get","getDataByID","id","postData","formData","post","editData","put","deleteData","delete","deleteImages","ids","initialValueForm","model","position","exterior","interior","name","price","bonus","includeComment","mainMediaId","bannerMediaId","includes","OptionPostEdit","form","Form","useForm","navigate","useNavigate","editId","useSelector","state","dispatch","useDispatch","fileListPropsMain","setFileListPropsMain","useState","fileListPropsBanner","setFileListPropsBanner","fileListPropsIncludes","setFileListPropsInludes","modelPosition","setModelPosition","modelExterior","setModelExterior","modelInterior","setModelInterior","isUpload","setIsUpload","mainIndex","setMainIndex","modelData","refetch","modelFetch","useQuery","apiService","enabled","positionData","positionFetch","exteriorData","exteriorFetch","interiorData","interiorFetch","mutate","imagesUploadMutate","imagesUpload","isLoading","imagesUploadLoading","isSuccess","imagesUploadSuccess","useMutation","_ref","onError","message","postExteriorMutate","postExterior","postExteriorLoading","postExteriorSuccess","_ref2","onSuccess","success","editExteriorLoading","editExteriorData","editExteriorRefetch","editExteriorSuccess","putExterior","putExteriorLoading","putData","putExteriorSuccess","_ref3","imagesDeleteMutate","_ref4","useEffect","formModel","getFieldsValue","setFieldsValue","type","EDIT_DATA","payload","_editExteriorData$ban","_editExteriorData$ban2","_editExteriorData$ban3","_editExteriorData$mai","_editExteriorData$mai2","_editExteriorData$mai3","initialIncludes","initialFileListPropsIncludes","undefined","i","length","_editExteriorData$inc","_editExteriorData$inc2","editDefaultImages","_editExteriorData$inc3","_editExteriorData$inc4","_editExteriorData$inc5","_editExteriorData$inc6","_editExteriorData$inc7","_editExteriorData$inc8","image","uid","_id","status","path","joinTags","tags","join","item","title","comment","mediaId","push","imageInitialBanner","bannerImage","imageInitialMain","mainImage","edit","storedValues","JSON","parse","images","handleBeforeUnload","setItem","stringify","window","addEventListener","removeItem","removeEventListener","options","useMemo","map","option","value","label","optionsPosition","optionsExterior","optionsInterior","_imagesUpload$","_imagesUpload$2","_imagesUpload$3","uploadImg","_imagesUpload$4","_imagesUpload$5","_imagesUpload$6","uploadFilesStateIncludes","_imagesUpload$7","_imagesUpload$8","_imagesUpload$9","getValue","itemsValue","items","onPreview","async","src","file","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","Image","imgWindow","open","document","write","outerHTML","_jsx","children","AppLoader","_jsxs","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","_fileListPropsBanner$","_fileListPropsMain$","splitTags","isImage","_fileListPropsInclude","_fileListPropsInclude2","split","onFinishFailed","errorInfo","autoComplete","Row","gutter","Col","Item","rules","required","Select","width","onChange","placeholder","optionLabelProp","Input","InputNumber","Upload","maxCount","fileList","listType","_ref5","newFileList","_fileListPropsBanner$2","FormData","append","beforeUpload","_ref6","_fileListPropsMain$2","List","fields","_ref8","add","remove","_Fragment","field","index","editorFileList","marginBottom","onChangeIncludesImage","_ref7","MinusCircleOutlined","onClick","handleRemoveIncludes","_fileListPropsInclude3","splice","fieldKey","Button","addFormList","block","backgroundColor","htmlType","marginTop","props","ref","React","AntdIcon","_objectSpread","icon","MinusCircleOutlinedSvg","displayName"],"sourceRoot":""}