{"version":3,"file":"static/js/268.c5905bb3.chunk.js","mappings":"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","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/Position/PositionPostEdit.jsx","../node_modules/@ant-design/icons-svg/es/asn/MinusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/MinusCircleOutlined.js"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('lptoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        await axios.delete(url, {data:ids});\n    },\n};\nexport default apiService;","import React, {useEffect, useMemo, useState} from 'react';\nimport {Button, Col, Form, Input, InputNumber, message, Row, Select, Space, Upload} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\n\nimport {MinusCircleOutlined} from \"@ant-design/icons\";\n// import ImgCrop from \"antd-img-crop\";\n\nconst initialValueForm = {\n    model: null,\n    name: \"\",\n    info: \"\",\n    price: null,\n    includedList: [\"\"],\n    mediaId: \"\"\n};\n\n\nconst PositionPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId} = useSelector(state => state.editData)\n    const dispatch = useDispatch()\n\n\n    const [fileListProps, setFileListProps] = useState([]);\n    const [valuesForm, setValues] = useState({});\n    const [isNotEditImages, setIsNotEditImages] = useState(false);\n    const [deleteImage, setDeleteImage] = useState({});\n    const [checkModel, setCheckModel] = useState(\"\");\n\n// query-model\n    const {data: categoryData, refetch: categoryFetch} = useQuery(\n        'get-model',\n        () => apiService.getData('/product'),\n        {\n            enabled: false,\n        },\n    );\n\n    // query-image\n    const {\n        mutate: imagesUploadMutate,\n        data: imagesUpload,\n        isLoading: imagesUploadLoading,\n        isSuccess: imagesUploadSuccess,\n    } = useMutation(({url, formData}) => apiService.postData(url, formData), {\n\n        onError: (error) => message.error(error.message, 'Rasmning JPG,JPEG,PNG formatlariga ruxsat etilgan')\n    });\n\n\n    // query-postion\n    const {\n        mutate: postPositionMutate,\n        data: postPosition,\n        isLoading: postPositionLoading,\n        isSuccess: postPositionSuccess,\n\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            message.error(error.message)\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editPositionLoading,\n        data: editPositionData,\n        refetch: editPositionRefetch,\n        isSuccess: editPositionSuccess,\n\n    } = useQuery([\"edit-postion\", editId], () => apiService.getDataByID(\"/position\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putPosition,\n        isLoading: putPositionLoading,\n        data: putData,\n        isSuccess: putPositionSuccess\n    } = useMutation(({\n                         url,\n                         data,\n                         id\n                     }) => apiService.editData(url, data, id),\n        {\n            onSuccess: () => {\n\n                message.success('Success')\n            },\n            onError: (error) => {\n\n                message.error(error)\n            }\n        });\n\n    const {mutate: imagesDeleteMutate} = useMutation(({url, ids}) => apiService.deleteImages(url, ids), {\n            onSuccess: () => message.success('Success'),\n            onError: (error) => message.error(error.message)\n        }\n    );\n    // get postion\n    const {\n        data: positionDataImage,\n        isSuccess: getPositionSuccess,\n        refetch: getPositionRefetch,\n    } = useQuery('position-get-by-model', () => apiService.getData(`/position?model=${checkModel}`), {\n\n        enabled: false,\n        onError: (error) => {\n\n            message.error(error);\n            // Handle the error\n        },\n    });\n\n    // get image position\n    useEffect(() => {\n        if (getPositionSuccess && positionDataImage.length > 0) {\n            const imageInitial = [\n                {\n                    uid: positionDataImage[0]?.image?._id,\n                    name: positionDataImage[0]?.image?.name,\n                    status: 'done',\n                    url: `${process.env.REACT_APP_API_URL}/${positionDataImage[0]?.image?.path}`,\n                },\n            ];\n            setFileListProps(imageInitial)\n            form.setFieldsValue({mediaId: imageInitial});\n        }else{\n            setFileListProps([])\n            form.setFieldsValue({mediaId: []});\n        }\n\n    }, [positionDataImage])\n    useEffect(() => {\n        if (checkModel) {\n            getPositionRefetch()\n        }\n    }, [checkModel])\n\n\n    // postion success\n    useEffect(() => {\n        let delImage = []\n        if (putPositionSuccess) {\n            dispatch({type: EDIT_DATA, payload: \"\"})\n        }\n        if (editPositionSuccess && deleteImage?.uid) {\n            delImage.push(deleteImage?.uid)\n        }\n        if (editPositionSuccess && deleteImage?.uid) {\n            const ids = {\n                ids: delImage\n            }\n            imagesDeleteMutate({url: '/medias', ids});\n        }\n\n\n        if (postPositionSuccess || putPositionSuccess) {\n\n            navigate('/position')\n        }\n    }, [postPosition, putData])\n\n    // postion error\n    // useEffect(() => {\n    //     if (postPositionIsError) {\n    //         message.error(\"error\")\n    //     }\n    //     if (putPositionIsError) {\n    //         message.error(putPositionError.message)\n    //     }\n    // }, [postPositionError, putPositionError])\n\n\n    // if edit postion\n    useEffect(() => {\n        if (editId !== \"\") {\n            editPositionRefetch();\n        }\n    }, [editId]);\n\n    // if no edit postion\n    useEffect(() => {\n        if (editId === \"\") {\n            form.setFieldsValue(initialValueForm)\n        }\n        setFileListProps([])\n        categoryFetch();\n    }, []);\n\n\n    //edit postion\n    useEffect(() => {\n\n        const imageInitial = [\n            {\n                uid: editPositionData?.image?._id,\n                name: editPositionData?.image?.name,\n                status: 'done',\n                url: `${process.env.REACT_APP_API_URL}/${editPositionData?.image?.path}`,\n            },\n        ];\n\n        if (editPositionSuccess) {\n\n            const edit = {\n                model: editPositionData.model,\n                name: editPositionData.name,\n                info: editPositionData.info,\n                price: editPositionData.price,\n                includedList: editPositionData.includedList,\n                mediaId: imageInitial,\n            }\n\n\n            setFileListProps(imageInitial);\n            form.setFieldsValue(edit)\n        }\n\n    }, [editPositionData])\n\n    // post\n    useEffect(() => {\n        let image = \"\"\n        if (editPositionSuccess && imagesUploadSuccess && fileListProps[0]?.originFileObj?.uid) {\n            image = imagesUpload[0]?._id;\n        } else if (editPositionSuccess||(checkModel && positionDataImage.length > 0)) {\n            image = fileListProps[0]?.uid;\n        }\n\n        if (!editPositionSuccess && imagesUpload) {\n            image = imagesUpload[0]?._id\n        }\n\n        const data = {\n            model: valuesForm.model,\n            name: valuesForm.name,\n            info: valuesForm.info,\n            price: valuesForm.price,\n            includedList: valuesForm.includedList,\n            mediaId: image,\n        };\n        if (imagesUploadSuccess && !editPositionSuccess) {\n            postPositionMutate({url: '/position', data});\n        } else if (isNotEditImages || imagesUploadSuccess) {\n            putPosition({url: '/position', data, id: editId});\n        }else if (!imagesUploadSuccess && !editPositionSuccess && checkModel && positionDataImage.length > 0) {\n            postPositionMutate({url: '/position', data});\n        }\n    }, [imagesUpload, valuesForm]);\n\n    const onFinish = (values) => {\n\n        const formData = new FormData();\n\n        let uploadNewImage = false;\n\n        if (editPositionSuccess) {\n            if (fileListProps[0]?.originFileObj?.uid) {\n                uploadNewImage = true;\n                formData.append('media', fileListProps[0]?.originFileObj);\n\n                setIsNotEditImages(false);\n                // setFileList(fileListProps);\n            } else {\n                uploadNewImage = false;\n                // setFileList(fileListProps);\n                setIsNotEditImages(true);\n            }\n        } else {\n            if (checkModel&& positionDataImage.length > 0){\n                uploadNewImage = false;\n                // setFileList(fileListProps);\n                setIsNotEditImages(false);\n            }else{\n\n            uploadNewImage = true;\n            formData.append('media', fileListProps[0]?.originFileObj);\n            }\n        }\n        if (uploadNewImage && !imagesUploadSuccess) {\n            imagesUploadMutate({url: '/medias', formData});\n        }\n\n        setValues(values);\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem(\n                'myFormValues',\n                JSON.stringify(form.getFieldsValue()),\n            );\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n    // selection\n    const options = useMemo(() => {\n        return categoryData?.map((option) => {\n            return {\n                value: option?.model,\n                label: option?.model,\n            };\n        });\n    }, [categoryData]);\n    const onChangeModel = (value) => {\n        setCheckModel(value)\n    }\n\n    // image\n    const onChange = ({fileList: newFileList}) => {\n        setFileListProps(newFileList);\n        form.setFieldsValue({mediaId: newFileList});\n    };\n    const handleRemove = (file) => {\n        setCheckModel(\"\")\n        if (editPositionSuccess) {\n            setDeleteImage(file);\n        }\n    };\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n\n\n    return (\n        <div>\n            {(postPositionLoading || editPositionLoading || putPositionLoading || imagesUploadLoading) ?\n                <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label={'Выберите модель'}\n                                name={'model'}\n                                rules={[\n                                    {required: true, message: 'Пожалуйста, выберите свою модель'},\n                                ]}>\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    onChange={onChangeModel}\n                                    placeholder='Выберите одну модель'\n                                    optionLabelProp='label'\n                                    options={options}\n                                />\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Позиция\"\n                                name=\"name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Пожалуйста, введите позицию\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n\n                    </Row>\n\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Предупреждение, (не требуется)\"\n                                name=\"info\"\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Цена\"\n                                name=\"price\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Вы должны ввести цену\"\n                                    }\n                                ]}\n                            >\n                                <InputNumber style={{width: '100%'}}/>\n                            </Form.Item>\n\n                        </Col>\n                    </Row>\n\n                    <Form.List name=\"includedList\">\n                        {(fields, {add, remove}) => (\n                            <>\n                                {fields.map((field, index) => {\n\n                                    return (\n                                        <div key={field.fieldKey} style={{marginBottom: 20}}>\n                                            <Space align={\"start\"}>\n\n\n                                                <Form.Item\n                                                    label={`Каковы преимущества этой позиции? ${index + 1}`}\n                                                    name={[field.name]}\n                                                    rules={[\n                                                        {required: true, message: \"Требуется строка\"}\n                                                    ]}\n                                                    style={{width: \"100%\"}}\n                                                >\n                                                    <Input/>\n                                                </Form.Item>\n                                                <MinusCircleOutlined\n                                                    onClick={() => remove(field.name)}/>\n                                            </Space>\n\n                                        </div>\n\n                                    );\n                                })}\n                                <Form.Item>\n                                    <Button type=\"dashed\" onClick={() => add()} block>\n                                        Add Item\n                                    </Button>\n                                </Form.Item>\n\n                            </>\n                        )}\n                    </Form.List>\n                    <Form.Item\n                        label='Изображение логотипа'\n                        name={'mediaId'}\n                        rules={[{required: true, message: 'Требуется загрузка изображения баннер'}]}>\n                        {/*<ImgCrop>*/}\n                            <Upload\n                                maxCount={1}\n                                fileList={fileListProps}\n                                listType='picture-card'\n                                onChange={onChange}\n                                onPreview={onPreview}\n                                beforeUpload={() => false}\n                                onRemove={handleRemove}>\n                                {fileListProps.length > 0 ? \"\" : \"Upload\"}\n                            </Upload>\n                        {/*</ImgCrop>*/}\n                    </Form.Item>\n\n\n                    <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"20px\"}}>\n                        {\n                            editPositionSuccess ? 'Edit' : 'Add'\n                        }\n                    </Button>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default PositionPostEdit;","// This icon file is generated automatically.\nvar MinusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"minus-circle\", \"theme\": \"outlined\" };\nexport default MinusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar MinusCircleOutlined = function MinusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MinusCircleOutlinedSvg\n  }));\n};\nMinusCircleOutlined.displayName = 'MinusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(MinusCircleOutlined);"],"names":["axios","baseURL","concat","process","request","use","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","data","get","getDataByID","id","postData","formData","post","editData","put","deleteData","delete","deleteImages","ids","initialValueForm","model","name","info","price","includedList","mediaId","PositionPostEdit","form","Form","useForm","navigate","useNavigate","editId","useSelector","state","dispatch","useDispatch","fileListProps","setFileListProps","useState","valuesForm","setValues","isNotEditImages","setIsNotEditImages","deleteImage","setDeleteImage","checkModel","setCheckModel","categoryData","refetch","categoryFetch","useQuery","apiService","enabled","mutate","imagesUploadMutate","imagesUpload","isLoading","imagesUploadLoading","isSuccess","imagesUploadSuccess","useMutation","_ref","onError","message","postPositionMutate","postPosition","postPositionLoading","postPositionSuccess","_ref2","onSuccess","success","editPositionLoading","editPositionData","editPositionRefetch","editPositionSuccess","putPosition","putPositionLoading","putData","putPositionSuccess","_ref3","imagesDeleteMutate","_ref4","positionDataImage","getPositionSuccess","getPositionRefetch","useEffect","length","_positionDataImage$","_positionDataImage$$i","_positionDataImage$2","_positionDataImage$2$","_positionDataImage$3","_positionDataImage$3$","imageInitial","uid","image","_id","status","path","setFieldsValue","delImage","type","EDIT_DATA","payload","push","_editPositionData$ima","_editPositionData$ima2","_editPositionData$ima3","edit","_fileListProps$","_fileListProps$$origi","_imagesUpload$","_imagesUpload$2","originFileObj","_fileListProps$2","storedValues","JSON","parse","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","options","useMemo","map","option","value","label","_jsx","children","AppLoader","_jsxs","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","FormData","uploadNewImage","_fileListProps$3","_fileListProps$3$orig","_fileListProps$4","_fileListProps$5","append","onFinishFailed","errorInfo","autoComplete","Row","gutter","Col","Item","rules","required","Select","width","onChange","placeholder","optionLabelProp","Input","InputNumber","List","fields","_ref6","add","remove","_Fragment","field","index","marginBottom","Space","align","MinusCircleOutlined","onClick","fieldKey","Button","block","Upload","maxCount","fileList","listType","_ref5","newFileList","onPreview","async","src","file","Promise","resolve","reader","FileReader","readAsDataURL","onload","result","Image","imgWindow","open","document","write","outerHTML","beforeUpload","onRemove","htmlType","marginTop","props","ref","React","AntdIcon","_objectSpread","icon","MinusCircleOutlinedSvg","displayName"],"sourceRoot":""}