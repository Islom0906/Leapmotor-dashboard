{"version":3,"file":"static/js/238.bfa36e3c.chunk.js","mappings":"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","sources":["@crema/core/Form/FormInput.jsx","@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/Region/RegionPostEdit.jsx","../node_modules/@ant-design/icons-svg/es/asn/MinusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/MinusCircleOutlined.js","../node_modules/antd/es/col/index.js"],"sourcesContent":["import React from 'react';\nimport {Form, Input} from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst FormInput = ({label,name,required,required_text}) => {\n    return (\n        <Form.Item\n            label={label}\n            name={name}\n\n            rules={[{\n                required: required, message: required_text\n            }]}\n        >\n            <Input />\n        </Form.Item>\n    );\n};\n\nexport default FormInput;\n\nFormInput.propTypes = {\n    label: PropTypes.string,\n    name: PropTypes.any,\n    required: PropTypes.bool,\n    required_text:PropTypes.string\n};","import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('lptoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        await axios.delete(url, {data:ids});\n    },\n};\nexport default apiService;","import React, {useEffect} from 'react';\nimport {Button, Col, Form, message, Row} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport FormInput from \"../../../@crema/core/Form/FormInput\";\nimport {MinusCircleOutlined} from \"@ant-design/icons\";\n\nconst initialValueForm = {\n    nameUz: \"\",\n    nameRu: \"\",\n    dealers: [\n        {\n            nameUz: \"\",\n            nameRu: \"\"\n        }\n    ]\n};\n\n\n\n\nconst RegionPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId} = useSelector(state => state.editData)\n    const dispatch = useDispatch()\n\n\n\n\n    // query-region\n    const {\n        mutate: postRegionMutate,\n        data: postRegion,\n        isLoading: postRegionLoading,\n        isSuccess: postRegionSuccess,\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editRegionLoading,\n        data: editRegionData,\n        refetch: editRegionRefetch,\n        isSuccess: editRegionSuccess,\n    } = useQuery([\"edit-region\", editId], () => apiService.getDataByID(\"/region\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putRegion,\n        isLoading: putRegionLoading,\n        data: putData,\n        isSuccess: putRegionSuccess\n    } = useMutation(({\n                         url,\n                         data,\n                         id\n                     }) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // region success\n    useEffect(() => {\n        if (putRegionSuccess) {\n            dispatch({type: EDIT_DATA, payload: \"\"})\n        }\n\n        if (postRegionSuccess || putRegionSuccess) {\n\n            navigate('/region')\n        }\n    }, [postRegion, putData])\n\n\n    // if edit region\n    useEffect(() => {\n        if (editId !== \"\") {\n            editRegionRefetch();\n        }\n    }, [editId]);\n\n    // if no edit region\n    useEffect(() => {\n        if (editId === \"\") {\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n    //edit region\n    useEffect(() => {\nconst dealers=[]\n\n        editRegionData?.dealers.map(dealer=>{\n            const data={\n                nameUz: dealer.nameUz,\n                nameRu: dealer.nameRu\n            }\n            dealers.push(data)\n        })\n\n        if (editRegionSuccess) {\n\n            const edit = {\n                nameUz: editRegionData.nameUz,\n                nameRu: editRegionData.nameRu,\n                dealers\n            }\n\n            form.setFieldsValue(edit)\n        }\n\n    }, [editRegionData])\n\n\n    const onFinish = (values) => {\n\n\n\n        if (editRegionData) {\n            putRegion({url: '/region', data: values, id: editId})\n        } else {\n            postRegionMutate({url: \"/region/\", data: values});\n        }\n\n\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem(\n                'myFormValues',\n                JSON.stringify(form.getFieldsValue()),\n            );\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n\n\n\n\n\n    return (\n        <div>\n            {(postRegionLoading || editRegionLoading || putRegionLoading) ?\n                <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <FormInput\n                                required={true}\n                                required_text={'To\\'ldirish talab qilinadi'}\n                                label={'Viloyat nomi Uz'}\n                                name={'nameUz'}\n                            />\n\n\n                        </Col>\n                        <Col span={12}>\n                            <FormInput\n                                required={true}\n                                required_text={'Требуется заполнение'}\n                                label={'Провинция Ru'}\n                                name={'nameRu'}\n                            />\n\n                        </Col>\n                    </Row>\n                    <Form.List name=\"dealers\">\n                        {(fields, {add, remove}) => (\n                            <>\n                                {fields.map((field, index) => {\n                                    return (\n                                        <div key={field.fieldKey} style={{marginBottom: 20}}>\n                                            <Row gutter={20}>\n\n                                                <Col span={11} offset={1}>\n                                                    <FormInput\n                                                        required={true}\n                                                        required_text={'To\\'ldirish talab qilinadi'}\n                                                        label={`Dealerni nomini kiriting Uz ${index + 1}`}\n                                                        name={[field.name, 'nameUz']}\n                                                    />\n                                                </Col>\n                                                <Col span={11}>\n                                                    <FormInput\n                                                        required={true}\n                                                        required_text={'Требуется заполнение'}\n                                                        label={`Введите имя дилера Ru ${index + 1}`}\n                                                        name={[field.name, 'nameRu']}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            <MinusCircleOutlined\n                                                onClick={() => remove(field.name)}/>\n                                        </div>\n\n                                    );\n                                })}\n                                <Form.Item>\n                                    <Button type=\"primary\" onClick={() => add()} block\n                                            style={{backgroundColor: '#28a745'}}>\n                                        Добавить нового дилера\n                                    </Button>\n                                </Form.Item>\n\n                            </>\n\n                        )}\n                    </Form.List>\n\n                    <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"20px\"}}>\n                        {\n                            editRegionSuccess ? 'Edit' : 'Add'\n                        }\n                    </Button>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default RegionPostEdit;","// This icon file is generated automatically.\nvar MinusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"minus-circle\", \"theme\": \"outlined\" };\nexport default MinusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar MinusCircleOutlined = function MinusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MinusCircleOutlinedSvg\n  }));\n};\nMinusCircleOutlined.displayName = 'MinusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(MinusCircleOutlined);","import { Col } from '../grid';\nexport default Col;"],"names":["_ref","label","name","required","required_text","_jsx","Form","Item","rules","message","children","Input","axios","baseURL","concat","process","request","use","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","data","get","getDataByID","id","postData","formData","post","editData","put","deleteData","delete","deleteImages","ids","initialValueForm","nameUz","nameRu","dealers","RegionPostEdit","form","useForm","navigate","useNavigate","editId","useSelector","state","dispatch","useDispatch","mutate","postRegionMutate","postRegion","isLoading","postRegionLoading","isSuccess","postRegionSuccess","useMutation","apiService","onSuccess","success","onError","obj","response","editRegionLoading","editRegionData","refetch","editRegionRefetch","editRegionSuccess","useQuery","enabled","putRegion","putRegionLoading","putData","putRegionSuccess","_ref2","useEffect","type","EDIT_DATA","payload","setFieldsValue","map","dealer","push","edit","storedValues","JSON","parse","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","AppLoader","_jsxs","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","onFinishFailed","errorInfo","autoComplete","Row","gutter","Col","FormInput","List","fields","_ref3","add","remove","_Fragment","field","index","marginBottom","offset","MinusCircleOutlined","onClick","fieldKey","Button","block","backgroundColor","htmlType","width","marginTop","props","ref","React","AntdIcon","_objectSpread","icon","MinusCircleOutlinedSvg","displayName"],"sourceRoot":""}