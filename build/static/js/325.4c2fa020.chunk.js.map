{"version":3,"file":"static/js/325.4c2fa020.chunk.js","mappings":"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","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/Map/MapPostEdit.jsx"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('lptoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        console.log('delete image',ids)\n        await axios.delete(url, {\"ids\":[\n                \"64f0ffa5883c58f0433c44d9\"\n            ]});\n    },\n};\nexport default apiService;","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Form, Input, message, Row} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport {GoogleMap, MarkerF, useJsApiLoader} from \"@react-google-maps/api\";\n\nconst initialValueForm = {\n    nameRu:\"\",\n    nameUz:\"\",\n    addressRu:\"\",\n    addressUz:\"\",\n    workingTime:\"\",\n    tel:\"\",\n    lat:\"\"\n};\n\n\n\nconst MapPostEdit = () => {\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: 'AIzaSyDt2upRTGqJ3BOGeKN1aCG5dByeOspcREk',\n        libraries: ['geometry', 'drawing'],\n    });\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId}=useSelector(state => state.editData)\n    const dispatch=useDispatch()\n\n\n\n    const [latLng, setlatLng] = useState({lat:null,lng:null});\n    console.log(latLng)\n    // query-map\n    const {\n        mutate: postMapMutate,\n        data: postMap,\n        isLoading: postMapLoading,\n        isSuccess: postMapSuccess,\n        error: postMapError,\n        isError: postMapIsError\n    } = useMutation(({url, data}) => apiService.postData(url, data),{\n        onSuccess:()=>{\n\n            message.success('Success')\n        },\n        onError:(error)=>{\n\n            message.error(error)\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editMapLoading,\n        data: editMapData,\n        refetch: editMapRefetch,\n        isSuccess: editMapSuccess,\n        error:putMapError,\n        isError:putMapIsError\n    } = useQuery([\"edit-map\", editId], () => apiService.getDataByID(\"/map\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putMap,\n        isLoading: putMapLoading,\n        data: putData,\n        isSuccess: putMapSuccess\n    } = useMutation(({\n                         url,\n                         data,\n                         id\n                     }) => apiService.editData(url, data, id));\n    // map success\n    useEffect(() => {\n        if (putMapSuccess) {\n            dispatch({type:EDIT_DATA,payload:\"\"})\n        }\n\n        if (postMapSuccess || putMapSuccess) {\n\n            navigate('/map')\n        }\n    }, [postMap,putData])\n\n    // map error\n    useEffect(() => {\n        if (postMapIsError) {\n            message.error(postMapError.message)\n        }\n        if (putMapIsError) {\n            message.error(putMapError.message)\n        }\n    }, [postMapError,putMapError])\n\n\n\n    // if edit map\n    useEffect(() => {\n        if (editId !== \"\") {\n            editMapRefetch();\n        }\n    }, [editId]);\n\n    // if no edit map\n    useEffect(() => {\n        if (editId===\"\"){\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n\n\n    //edit map\n    useEffect(()=>{\n        if (editMapSuccess){\n\n        const edit={\n            nameRu:editMapData.nameRu,\n            nameUz:editMapData.nameRu,\n            addressRu:editMapData.addressRu,\n            addressUz:editMapData.addressUz,\n            workingTime:editMapData.workingTime,\n            tel:editMapData.tel,\n            lat:editMapData.lat\n        }\n        setlatLng({lat:Number(editMapData.lat),lng:Number(editMapData.lng)})\n            form.setFieldsValue(edit)\n        }\n\n    },[editMapData])\n\n\n\n    const onFinish = (values) => {\n\n        console.log(values)\n        const data={...values,lat:`${latLng.lat}`,lng:`${latLng.lng}`}\n\n\n        if (editMapData){\n            putMap({url: '/map',data,id:editId})\n        }else{\n            postMapMutate({url: \"/map\", data});\n        }\n\n\n\n\n\n\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n\n  useEffect(() => {\n    const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n    if (storedValues) {\n        storedValues.images=[]\n      form.setFieldsValue(storedValues);\n    }\n\n    const handleBeforeUnload = () => {\n        \n            localStorage.setItem(\n              'myFormValues',\n              JSON.stringify(form.getFieldsValue()),\n            );\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return ()=>{\n        localStorage.removeItem('editDataId')\n        localStorage.removeItem('myFormValues')\n        window.removeEventListener('beforeunload', handleBeforeUnload);\n    }\n  }, []);\n\n\n    // Map\n    const handleMapClick = (event) => {\n        const clickedLatLng = {\n            lat: event.latLng.lat(),\n            lng: event?.latLng.lng(),\n        };\n        setlatLng(clickedLatLng)\n        form.setFieldsValue({lat:clickedLatLng.lat})\n        console.log('Clicked LatLng:', clickedLatLng);\n    };\n    const mapStyles = {\n        height: '400px',\n        width: '100%',\n    };\n    const defaultCenter = {\n        lat: 41.311785,\n        lng: 69.279696,\n    };\n\n    console.log(latLng)\n    return (\n        <div>\n            {( postMapLoading ||editMapLoading ||putMapLoading) ?\n                <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Название филиала Ru\"\n                                name=\"nameRu\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Ввод названия филиала обязателен Ru!\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Filial nomi Uz\"\n                                name=\"nameUz\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Filial nomini kiritish majburiy Uz!\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n\n                    </Row>\n\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Адрес Ru\"\n                                name=\"addressRu\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Требуется адрес Ru!\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Manzil Uz\"\n                                name=\"addressUz\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Manzilni kiritish shart Uz!\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                    </Row>\n\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Рабочее время\"\n                                name=\"workingTime\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Необходимо ввести часы работы\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Номер телефона\"\n                                name=\"tel\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Требуется номер телефона!\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n                        <Col span={24}>\n                            {\n                                isLoaded &&\n\n                                <GoogleMap\n                                    mapContainerStyle={mapStyles}\n                                    zoom={12}\n                                    center={defaultCenter}\n                                    onClick={handleMapClick}\n                                >\n                                    <MarkerF position={latLng}/>\n                                </GoogleMap>\n                            }\n                            <Form.Item\n                                label=\"\"\n                                name=\"lat\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Разметка карты обязательна\"\n                                    }\n                                ]}\n                            >\n\n\n\n                            </Form.Item>\n\n\n                        </Col>\n\n                    </Row>\n\n\n                        <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\",marginTop:\"20px\"}}>\n                    {\n                            editMapSuccess ? 'Edit' : 'Add'\n                        }\n                    </Button>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default MapPostEdit;"],"names":["axios","concat","process","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","sent","abrupt","stop","getDataByID","id","_callee2","_yield$axios$get2","_context2","postData","formData","_callee3","_yield$axios$post","_context3","editData","_callee4","_yield$axios$put","_context4","deleteData","_callee5","_context5","deleteImages","ids","_callee6","_context6","initialValueForm","nameRu","nameUz","addressRu","addressUz","workingTime","tel","lat","isLoaded","useJsApiLoader","googleMapsApiKey","libraries","_Form$useForm","Form","form","_slicedToArray","navigate","useNavigate","editId","useSelector","state","dispatch","useDispatch","_useState","useState","lng","_useState2","latLng","setlatLng","_useMutation","useMutation","_ref","apiService","onSuccess","message","onError","postMapMutate","mutate","postMap","postMapLoading","isLoading","postMapSuccess","isSuccess","postMapError","postMapIsError","isError","_useQuery","useQuery","enabled","editMapLoading","editMapData","editMapRefetch","refetch","editMapSuccess","putMapError","putMapIsError","_useMutation2","_ref2","putMap","putMapLoading","putData","putMapSuccess","useEffect","type","EDIT_DATA","payload","setFieldsValue","edit","Number","storedValues","JSON","parse","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","_jsx","children","AppLoader","_jsxs","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","_objectSpread","onFinishFailed","errorInfo","autoComplete","Row","gutter","Col","label","rules","required","Input","GoogleMap","mapContainerStyle","height","width","zoom","center","onClick","event","clickedLatLng","MarkerF","position","Button","htmlType","marginTop"],"sourceRoot":""}