{"version":3,"file":"static/js/345.d6230efc.chunk.js","mappings":"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","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/Contact/ContactPostEdit.jsx","../node_modules/antd/es/col/index.js"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('lptoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        console.log('delete image',ids)\n        await axios.delete(url, {\"ids\":[\n                \"64f0ffa5883c58f0433c44d9\"\n            ]});\n    },\n};\nexport default apiService;","import React, {useEffect} from 'react';\nimport {Button, Col, Form, Input, message, Row} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\n\nconst initialValueForm = {\n    tel:\"\",\n    facebook:\"\",\n    twitter:\"\",\n    instagram:\"\"\n};\n\n\n\nconst ContactPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId}=useSelector(state => state.editData)\n    const dispatch=useDispatch()\n\n    // query-contact\n    const {\n        mutate: postContactMutate,\n        data: postContact,\n        isLoading: postContactLoading,\n        isSuccess: postContactSuccess,\n        error: postContactError,\n        isError: postContactIsError\n    } = useMutation(({url, data}) => apiService.postData(url, data),{\n        onSuccess:()=>{\n\n            message.success('Success')\n        },\n        onError:(error)=>{\n\n            message.error(error)\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editContactLoading,\n        data: editContactData,\n        refetch: editContactRefetch,\n        isSuccess: editContactSuccess,\n        error:putContactError,\n        isError:putContactIsError\n    } = useQuery([\"edit-contact\"], () => apiService.getData(\"/contact\"), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putContact,\n        isLoading: putContactLoading,\n        data: putData,\n        isSuccess: putContactSuccess\n    } = useMutation(({\n                         url,\n                         data,\n                         id\n                     }) => apiService.editData(url, data, id));\n    // contact success\n    useEffect(() => {\n        if (putContactSuccess) {\n            dispatch({type:EDIT_DATA,payload:\"\"})\n        }\n\n        if (postContactSuccess || putContactSuccess) {\n\n            navigate('/contact')\n        }\n    }, [postContact,putData])\n\n    // contact error\n    useEffect(() => {\n        if (postContactIsError) {\n            message.error(postContactError.message)\n        }\n        if (putContactIsError) {\n            message.error(putContactError.message)\n        }\n    }, [postContactError,putContactError])\n\n\n\n    // if edit contact\n    useEffect(() => {\n        if (editId !== \"\") {\n            editContactRefetch();\n        }\n    }, [editId]);\n\n    // if no edit contact\n    useEffect(() => {\n        if (editId===\"\"){\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n\n\n    //edit contact\n    useEffect(()=>{\n        if (editContactSuccess){\n\n        const edit={\n            tel:editContactData.tel,\n            facebook:editContactData.facebook,\n            twitter:editContactData.twitter,\n            instagram:editContactData.instagram,\n\n        }\n            form.setFieldsValue(edit)\n        }\n\n    },[editContactData])\n\n\n\n    const onFinish = (values) => {\n\n\n\n        if (editContactSuccess){\n            putContact({url: '/contact',id:editId,data:values})\n        }else{\n            postContactMutate({url: \"/contact\", data:values});\n        }\n\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n\n  useEffect(() => {\n    const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n    if (storedValues) {\n        storedValues.images=[]\n      form.setFieldsValue(storedValues);\n    }\n\n    const handleBeforeUnload = () => {\n        \n            localStorage.setItem(\n              'myFormValues',\n              JSON.stringify(form.getFieldsValue()),\n            );\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return ()=>{\n        localStorage.removeItem('editDataId')\n        localStorage.removeItem('myFormValues')\n        window.removeEventListener('beforeunload', handleBeforeUnload);\n    }\n  }, []);\n\n\n    // Contact\n\n\n    return (\n        <div>\n            {( postContactLoading ||editContactLoading ||putContactLoading) ?\n                <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Номер телефона\"\n                                name=\"tel\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Ввод номера телефона обязателен\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Facebook\"\n                                name=\"facebook\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Ссылка на Facebook обязательна\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n\n                    </Row>\n\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Telegram\"\n                                name=\"twitter\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Обязательно ввести ссылку на Telegram\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Instagram\"\n                                name=\"instagram\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Ссылка на Инстаграм обязательна\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                    </Row>\n\n\n\n\n\n                        <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\",marginTop:\"20px\"}}>\n                    {\n                            editContactSuccess ? 'Edit' : 'Add'\n                        }\n                    </Button>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default ContactPostEdit;","import { Col } from '../grid';\nexport default Col;"],"names":["axios","concat","process","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","sent","abrupt","stop","getDataByID","id","_callee2","_yield$axios$get2","_context2","postData","formData","_callee3","_yield$axios$post","_context3","editData","_callee4","_yield$axios$put","_context4","deleteData","_callee5","_context5","deleteImages","ids","_callee6","_context6","initialValueForm","tel","facebook","twitter","instagram","_Form$useForm","Form","form","_slicedToArray","navigate","useNavigate","editId","useSelector","state","dispatch","useDispatch","_useMutation","useMutation","_ref","apiService","onSuccess","message","onError","postContactMutate","mutate","postContact","postContactLoading","isLoading","postContactSuccess","isSuccess","postContactError","postContactIsError","isError","_useQuery","useQuery","enabled","editContactLoading","editContactData","editContactRefetch","refetch","editContactSuccess","putContactError","putContactIsError","_useMutation2","_ref2","putContact","putContactLoading","putData","putContactSuccess","useEffect","type","EDIT_DATA","payload","setFieldsValue","edit","storedValues","JSON","parse","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","_jsx","children","AppLoader","_jsxs","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","onFinishFailed","errorInfo","autoComplete","Row","gutter","Col","label","rules","required","Input","Button","htmlType","width","marginTop"],"sourceRoot":""}