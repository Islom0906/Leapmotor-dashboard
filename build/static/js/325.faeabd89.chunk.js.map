{"version":3,"file":"static/js/325.faeabd89.chunk.js","mappings":"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","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/Map/MapPostEdit.jsx"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('lptoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        await axios.delete(url, {data:ids});\n    },\n};\nexport default apiService;","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Form, Input, message, Row} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport {GoogleMap, MarkerF, useJsApiLoader} from \"@react-google-maps/api\";\n\nconst initialValueForm = {\n    nameRu:\"\",\n    nameUz:\"\",\n    addressRu:\"\",\n    addressUz:\"\",\n    workingTime:\"\",\n    tel:\"\",\n    lat:\"\",\n    link:\"\"\n};\n\n\n\nconst MapPostEdit = () => {\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: 'AIzaSyDt2upRTGqJ3BOGeKN1aCG5dByeOspcREk',\n        libraries: ['geometry', 'drawing'],\n    });\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId}=useSelector(state => state.editData)\n    const dispatch=useDispatch()\n\n\n\n    const [latLng, setlatLng] = useState({lat:null,lng:null});\n    const [defaultCenter, setDefaultCenter] = useState({lat: 41.311785,\n        lng: 69.279696,});\n\n    // query-map\n    const {\n        mutate: postMapMutate,\n        data: postMap,\n        isLoading: postMapLoading,\n        isSuccess: postMapSuccess,\n        error: postMapError,\n        isError: postMapIsError\n    } = useMutation(({url, data}) => apiService.postData(url, data),{\n        onSuccess:()=>{\n\n            message.success('Success')\n        },\n        onError:(error)=>{\n\n            message.error(error)\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editMapLoading,\n        data: editMapData,\n        refetch: editMapRefetch,\n        isSuccess: editMapSuccess,\n        error:putMapError,\n        isError:putMapIsError\n    } = useQuery([\"edit-map\", editId], () => apiService.getDataByID(\"/map\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putMap,\n        isLoading: putMapLoading,\n        data: putData,\n        isSuccess: putMapSuccess\n    } = useMutation(({\n                         url,\n                         data,\n                         id\n                     }) => apiService.editData(url, data, id));\n    // map success\n    useEffect(() => {\n        if (putMapSuccess) {\n            dispatch({type:EDIT_DATA,payload:\"\"})\n        }\n\n        if (postMapSuccess || putMapSuccess) {\n\n            navigate('/map')\n        }\n    }, [postMap,putData])\n\n    // map error\n    useEffect(() => {\n        if (postMapIsError) {\n            message.error(postMapError.message)\n        }\n        if (putMapIsError) {\n            message.error(putMapError.message)\n        }\n    }, [postMapError,putMapError])\n\n\n\n    // if edit map\n    useEffect(() => {\n        if (editId !== \"\") {\n            editMapRefetch();\n        }\n    }, [editId]);\n\n    // if no edit map\n    useEffect(() => {\n        if (editId===\"\"){\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n\n\n    //edit map\n    useEffect(()=>{\n        if (editMapSuccess){\n\n        const edit={\n            nameRu:editMapData.nameRu,\n            nameUz:editMapData.nameRu,\n            addressRu:editMapData.addressRu,\n            addressUz:editMapData.addressUz,\n            workingTime:editMapData.workingTime,\n            tel:editMapData.tel,\n            lat:editMapData.lat,\n            link:editMapData.link\n        }\n        setlatLng({lat:Number(editMapData.lat),lng:Number(editMapData.lng)})\n            form.setFieldsValue(edit)\n        }\n\n    },[editMapData])\n\n\n\n    const onFinish = (values) => {\n\n        const data={...values,lat:`${latLng.lat}`,lng:`${latLng.lng}`}\n\n\n        if (editMapData){\n            putMap({url: '/map',data,id:editId})\n        }else{\n            postMapMutate({url: \"/map\", data});\n        }\n\n\n\n\n\n\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n\n  useEffect(() => {\n    const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n    if (storedValues) {\n        storedValues.images=[]\n      form.setFieldsValue(storedValues);\n    }\n\n    const handleBeforeUnload = () => {\n        \n            localStorage.setItem(\n              'myFormValues',\n              JSON.stringify(form.getFieldsValue()),\n            );\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return ()=>{\n        localStorage.removeItem('editDataId')\n        localStorage.removeItem('myFormValues')\n        window.removeEventListener('beforeunload', handleBeforeUnload);\n    }\n  }, []);\n\n\n    // Map\n    const handleMapClick = (event) => {\n        const clickedLatLng = {\n            lat: event.latLng.lat(),\n            lng: event?.latLng.lng(),\n        };\n        setDefaultCenter(clickedLatLng)\n        setlatLng(clickedLatLng)\n        form.setFieldsValue({lat:clickedLatLng.lat})\n    };\n    const mapStyles = {\n        height: '400px',\n        width: '100%',\n    };\n\n\n    return (\n        <div>\n            {( postMapLoading ||editMapLoading ||putMapLoading) ?\n                <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Название филиала Ru\"\n                                name=\"nameRu\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Ввод названия филиала обязателен Ru!\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Filial nomi Uz\"\n                                name=\"nameUz\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Filial nomini kiritish majburiy Uz!\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n\n                    </Row>\n\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Адрес Ru\"\n                                name=\"addressRu\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Требуется адрес Ru!\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Manzil Uz\"\n                                name=\"addressUz\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Manzilni kiritish shart Uz!\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                    </Row>\n\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Рабочее время\"\n                                name=\"workingTime\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Необходимо ввести часы работы\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Номер телефона\"\n                                name=\"tel\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Требуется номер телефона!\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={24}>\n                            <Form.Item\n                                label=\"Ссылка на сайт\"\n                                name=\"link\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Требуется cсылка на сайт!\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n                        <Col span={24}>\n                            {\n                                isLoaded &&\n\n                                <GoogleMap\n                                    mapContainerStyle={mapStyles}\n                                    zoom={12}\n                                    center={defaultCenter}\n                                    onClick={handleMapClick}\n                                >\n                                    <MarkerF position={latLng}/>\n                                </GoogleMap>\n                            }\n                            <Form.Item\n                                label=\"\"\n                                name=\"lat\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Разметка карты обязательна\"\n                                    }\n                                ]}\n                            >\n\n\n\n                            </Form.Item>\n\n\n                        </Col>\n\n                    </Row>\n\n\n                        <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\",marginTop:\"20px\"}}>\n                    {\n                            editMapSuccess ? 'Edit' : 'Add'\n                        }\n                    </Button>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default MapPostEdit;"],"names":["axios","baseURL","concat","process","request","use","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","data","get","getDataByID","id","postData","formData","post","editData","put","deleteData","delete","deleteImages","ids","initialValueForm","nameRu","nameUz","addressRu","addressUz","workingTime","tel","lat","link","MapPostEdit","isLoaded","useJsApiLoader","googleMapsApiKey","libraries","form","Form","useForm","navigate","useNavigate","editId","useSelector","state","dispatch","useDispatch","latLng","setlatLng","useState","lng","defaultCenter","setDefaultCenter","mutate","postMapMutate","postMap","isLoading","postMapLoading","isSuccess","postMapSuccess","postMapError","isError","postMapIsError","useMutation","_ref","apiService","onSuccess","message","success","onError","editMapLoading","editMapData","refetch","editMapRefetch","editMapSuccess","putMapError","putMapIsError","useQuery","enabled","putMap","putMapLoading","putData","putMapSuccess","_ref2","useEffect","type","EDIT_DATA","payload","setFieldsValue","edit","Number","storedValues","JSON","parse","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","_jsx","children","AppLoader","_jsxs","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","onFinishFailed","errorInfo","autoComplete","Row","gutter","Col","Item","label","rules","required","Input","GoogleMap","mapContainerStyle","height","width","zoom","center","onClick","event","clickedLatLng","MarkerF","position","Button","htmlType","marginTop"],"sourceRoot":""}